class Solution {
    static boolean searchMatrix(int[][] matrix, int target) {

        int row = searchRow(matrix, target);
        if (row != -1)
            return searchElement(row, matrix, target);
        return false;
    }

    static int searchRow(int[][] matrix, int target) {

        int start = 0;
        int end = matrix.length - 1;
        while (start <= end) {

            int mid = start + (end - start) / 2;
            if (target >= matrix[mid][0]
                    && target <= matrix[mid][matrix[mid].length - 1])
                return mid;
            else if (target > matrix[mid][0])
                start = mid + 1;
            else
                end = mid - 1;
        }
        return -1;
    }

    static boolean searchElement(int row, int[][] matrix, int target) {

        int start = 0;
        int end = matrix[row].length - 1;
        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (target == matrix[row][mid])
                return true;
            else if (target > matrix[row][mid])
                start = mid + 1;
            else
                end = mid - 1;
        }
        return false;
    }

    public static void main(String[] args) {

        int[][] arr = { { 1, 3, 5, 7 }, { 10, 11, 16, 20 }, { 23, 30, 34, 60 } };
        int target = 3;
        searchMatrix(arr, target);
    }
}
